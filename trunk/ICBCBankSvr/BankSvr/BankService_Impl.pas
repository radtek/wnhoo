unit BankService_Impl;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ This is where you are supposed to code the implementation of your objects. }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes, SysUtils,
  {RemObjects:} uROXMLIntf, uROClientIntf, uROTypes, uROServer, uROServerIntf, uROSessions,
  {Generated:} BankSvrLib_Intf;

type
  { TBankService }
  TBankService = class(TRORemotable, IBankService)
  private
  protected
    { IBankService methods }
    function GetSvrDt: DateTime;
    function QueryAccValue_S(const fSeqno: AnsiString; const AccNo0: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString; var rtStr: AnsiString): Boolean;
    function QueryCurDayDetails_M(const fSeqno: AnsiString; const AccNo: AnsiString; var NextTag: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString;
      var rtStr: AnsiString): Boolean;
    function PayEnt_S(const fSeqno: AnsiString; const RecAccNo: AnsiString; const RecAccNameCN: AnsiString; const PayAmt: AnsiString;
      const UseCN: AnsiString; const PostScript: AnsiString; const Summary: AnsiString; var rtCode: AnsiString;
      var rtMsg: AnsiString; var rtStr: AnsiString): Boolean;
    function QueryPayEnt_S(const fSeqno: AnsiString; const QryfSeqno: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString;
      var rtStr: AnsiString): Boolean;
    function PerDis_S(const fSeqno: AnsiString; const PayAccNo: AnsiString; const PayAccNameCN: AnsiString; const Portno: AnsiString;
      const ContractNo: AnsiString; const PayAmt: AnsiString; const UseCN: AnsiString; const PostScript: AnsiString;
      const Summary: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString; var rtStr: AnsiString): Boolean;
    function QueryPerDis_S(const fSeqno: AnsiString; const QryfSeqno: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString;
      var rtStr: AnsiString): Boolean;
    function QueryHistoryDetails_M(const fSeqno: AnsiString; const AccNo: AnsiString; const BeginDate: AnsiString; const EndDate: AnsiString;
      var NextTag: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString; var rtStr: AnsiString): Boolean;
    function QueryPerInf_M(const fSeqno: AnsiString; const RecAccNo: AnsiString; const QueryTag: AnsiString; const BeginDate: AnsiString;
      const EndDate: AnsiString; var NextTag: AnsiString; var rtCode: AnsiString; var rtMsg: AnsiString; var rtStr: AnsiString): Boolean;
  end;

implementation

uses
  {Generated:} BankSvrLib_Invk, u_Func;

procedure Create_BankService(out anInstance: IUnknown);
begin
  anInstance := TBankService.Create;
end;

{ BankService }

function TBankService.PayEnt_S(const fSeqno, RecAccNo, RecAccNameCN, PayAmt,
  UseCN, PostScript, Summary: AnsiString; var rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.PayEnt_S(fSeqno, RecAccNo, RecAccNameCN, PayAmt,
    UseCN, PostScript, Summary, rtCode, rtMsg, rtStr);
end;

function TBankService.PerDis_S(const fSeqno, PayAccNo, PayAccNameCN, Portno,
  ContractNo, PayAmt, UseCN, PostScript, Summary: AnsiString; var rtCode, rtMsg,
  rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.PerDis_S(fSeqno, PayAccNo, PayAccNameCN, Portno,
    ContractNo, PayAmt, UseCN, PostScript, Summary, rtCode, rtMsg, rtStr);
end;

function TBankService.QueryAccValue_S(const fSeqno, AccNo0: AnsiString;
  var rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryAccValue_S(fSeqno, AccNo0,
    rtCode, rtMsg, rtStr);
end;

function TBankService.QueryCurDayDetails_M(const fSeqno, AccNo: AnsiString;
  var NextTag, rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryCurDayDetails_M(fSeqno, AccNo, NextTag,
    rtCode, rtMsg, rtStr);
end;

function TBankService.QueryHistoryDetails_M(const fSeqno, AccNo, BeginDate,
  EndDate: AnsiString; var NextTag, rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryHistoryDetails_M(fSeqno, AccNo, BeginDate, EndDate,
    NextTag, rtCode, rtMsg, rtStr);
end;

function TBankService.QueryPayEnt_S(const fSeqno, QryfSeqno: AnsiString;
  var rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryPayEnt_S(fSeqno, QryfSeqno, rtCode, rtMsg, rtStr);
end;

function TBankService.QueryPerDis_S(const fSeqno, QryfSeqno: AnsiString;
  var rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryPayEnt_S(fSeqno, QryfSeqno, rtCode, rtMsg, rtStr);
end;

function TBankService.QueryPerInf_M(const fSeqno, RecAccNo, QueryTag, BeginDate,
  EndDate: AnsiString; var NextTag, rtCode, rtMsg, rtStr: AnsiString): Boolean;
begin
  Result := U_ICBCCtl.QueryPerInf_M(fSeqno, RecAccNo, QueryTag, BeginDate,
    EndDate, NextTag, rtCode, rtMsg, rtStr);
end;

function TBankService.GetSvrDt: DateTime;
begin
  Result := Now();
end;

var
  fClassFactory: IROClassFactory;
initialization
  fClassFactory := TROClassFactory.Create('BankService', Create_BankService, TBankService_Invoker);
  // RegisterForZeroConf(fClassFactory,'_BankService_rosdk._tcp.');

finalization
  UnRegisterClassFactory(fClassFactory);
  fClassFactory := nil;

end.

